{"version":3,"sources":["BooksAPI.js","components/header.js","components/authors.js","components/idcheck.js","components/cover.js","components/book.js","components/subheader.js","components/allocationbooks.js","components/searchpage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","headerStyle","textAlign","background","color","padding","margin","Header","react_default","a","createElement","style","uuidv4","require","fontSize","Authors","props","undefined","authors","map","author","key","idCheck","width","marginTop","backgroundColor","storedBooks","forEach","storedBook","Fragment","Cover","imageLinks","className","height","backgroundImage","thumbnail","idcheck","Book","selectValue","toConsumableArray","this","stored","_this","cover","onChange","move","bind","value","checkBookShelf","disabled","title","Component","subHeader","allocationBooks","subheader","components_book","SearchPage","refs","inputField","focus","cursor","onClick","closeSearchPage","ref","type","placeholder","BooksApp","state","currentlyReading","wantToRead","read","searchedBooks","showSearchPage","reorganizeBooks","cr","wr","r","push","setState","e","BooksAPI","target","response","componentDidMount","_this2","_this3","react_router_dom","header","searchpage","length","allocationbooks","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"6QACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERC,EAAS,SAACC,GAAD,OACpBd,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEK,YACtBJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,eCjCvB,IAAMC,EAAc,CAClBC,UAAW,SACXC,WAAY,WACZC,MAAO,QACPC,QAAS,OACTC,OAAQ,KAGKC,EAhBf,WACE,OACEC,EAAAC,EAAAC,cAAA,MAAIC,MAAOV,GAAX,YCHEW,EAASC,EAAQ,IAkBvB,IAAMF,EAAQ,CACZL,OAAQ,IACRQ,SAAU,QAGGC,EArBf,SAAiBC,GAEf,YAAqBC,IAAlBD,EAAME,QACAF,EAAME,QAAQC,IAAI,SAACC,GAAD,OACvBZ,EAAAC,EAAAC,cAAA,OAAKW,IAAKT,IAAUD,MAAOA,GACvBS,KAKJZ,EAAAC,EAAAC,cAAA,OAAKW,IAAKT,OC4CDU,MAvDf,SAAkBN,GAEhB,IAAIjC,EAAQ,iBAER4B,EAAQ,CACVT,UAAW,SAAUqB,MAAO,IAAKC,WAAY,GAAIpB,MAAO,QACxDqB,gBAAiB,WAiBrB,GAdET,EAAMU,YAAYC,QAAQ,SAACC,GAEtBA,EAAW1C,KAAO8B,EAAMlC,KAAKI,KAC9BH,EAAQ6C,EAAW7C,MAEnB4B,EAAQ,CACNT,UAAW,SAAUqB,MAAO,IAAKC,WAAY,GAAGpB,MAAO,QACvDqB,gBAAiB,mBAODR,IAArBD,EAAMlC,KAAKC,MACZ,OAAOiC,EAAMlC,KAAKC,OACd,IAAK,mBACHA,EAAM,mBACN4B,EAAQ,CAACT,UAAW,SAAUqB,MAAO,IAAKC,WAAY,GAAIpB,MAAO,QAASqB,gBAAiB,WAC3F,MACF,IAAK,aACH1C,EAAM,aACN4B,EAAQ,CAACT,UAAW,SAAUqB,MAAO,IAAKC,WAAY,GAAIpB,MAAO,QAASqB,gBAAiB,WAC3F,MACF,IAAK,OACH1C,EAAM,OACN4B,EAAQ,CAACT,UAAW,SAAUqB,MAAO,IAAKC,WAAY,GAAIpB,MAAO,QAASqB,gBAAiB,WAC3F,MACF,QACA1C,EAAQ,iBACR4B,EAAQ,CAACT,UAAW,SAAUqB,MAAO,IAAKC,WAAY,GAAIpB,MAAO,QAAQqB,gBAAiB,WAO5F,OACEjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMoB,SAAP,KACErB,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAQ5B,KCxBX+C,MAvBf,SAAgBd,GAKd,YAA6BC,IAA1BD,EAAMlC,KAAKiD,WAETvB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,aAAarB,MAAO,CAAEY,MAAO,IAAKU,OAAQ,IAAKC,gBAAkB,OAASlB,EAAMlC,KAAKiD,WAAWI,UAAY,MAC3H3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAStD,KAAMkC,EAAMlC,KAAM4C,YAAaV,EAAMU,eAM/ClB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,aAAarB,MAAO,CAAEY,MAAO,IAAKU,OAAQ,IAAK9B,WAAa,UAC3EK,EAAAC,EAAAC,cAAC0B,EAAD,CAAStD,KAAMkC,EAAMlC,KAAM4C,YAAaV,EAAMU,gBCqCrCW,yLA/CEvD,GACb,IAAIwD,EAAc,OAUlB,OATgBlD,OAAAmD,EAAA,EAAAnD,CAAOoD,KAAKxB,MAAMU,aAEvBC,QAAQ,SAACc,GAChB,GAAGA,EAAOvD,KAAOJ,EAAKI,GAEpB,OADAoD,EAAcG,EAAO1D,QAKpBuD,mCAMA,IAAAI,EAAAF,KAEL,OAAOA,KAAKxB,MAAMhB,MAAMmB,IAAI,SAACrC,GAAD,OAC1B0B,EAAAC,EAAAC,cAAA,MAAIW,IAAKvC,EAAKI,IACZsB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,QACbxB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,YACbxB,EAAAC,EAAAC,cAACiC,EAAD,CAAO7D,KAAMA,EAAM4C,YAAagB,EAAK1B,MAAMU,cAC3ClB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,sBACbxB,EAAAC,EAAAC,cAAA,UAAQkC,SAAUF,EAAK1B,MAAM6B,KAAKC,KAAKJ,EAAM5D,GAAOiE,MAAOjE,EAAKC,MAAQD,EAAKC,MAAQ2D,EAAKM,eAAelE,IACvG0B,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,OAAOE,UAAQ,GAA7B,cACAzC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,oBAAd,qBACAvC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,cAAd,gBACAvC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,QAAd,QACAvC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,QAAd,WAINvC,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,aAAarB,MAAO,CAACP,MAAO,YAAatB,EAAKoE,OAC7D1C,EAAAC,EAAAC,cAACQ,EAAD,CAASA,QAASpC,EAAKoC,qBAtChBiC,aC8BJC,MAjCf,SAAoBpC,GAElB,IAAIkC,EAAQlC,EAAMkC,MAEdvC,EAAQ,CACVT,UAAW,SACXE,MAAO,QACPqB,gBAAiB,WAGnB,OAAOT,EAAMkC,OACX,IAAK,oBACHvC,EAAQ,CAACT,UAAW,SAASE,MAAO,QAASqB,gBAAiB,WAC9D,MACF,IAAK,eACHd,EAAQ,CAACT,UAAW,SAASE,MAAO,QAASqB,gBAAiB,WAC9D,MACF,IAAK,OACHd,EAAQ,CAACT,UAAW,SAASE,MAAO,QAASqB,gBAAiB,WAC9D,MACF,QACA,OAAO,EAGT,OACEjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMoB,SAAP,KACErB,EAAAC,EAAAC,cAAA,MAAIsB,UAAU,kBAAkBrB,MAAOA,GAAQuC,KCCtCG,mLApBX,OACE7C,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,aACbxB,EAAAC,EAAAC,cAAC4C,EAAD,CAAWJ,MAAOV,KAAKxB,MAAMkC,QAC3B1C,EAAAC,EAAAC,cAAA,MAAIsB,UAAU,cACZxB,EAAAC,EAAAC,cAAC6C,EAAD,CAAMvD,MAAOwC,KAAKxB,MAAMhB,MACvB6C,KAAML,KAAKxB,MAAM6B,KACjBnB,YAAac,KAAKxB,MAAMU,uBAVPyB,aCkCfK,8LAhCXhB,KAAKiB,KAAKC,WAAWC,yCAGd,IAAAjB,EAAAF,KAEP,OACEhC,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,gBACbxB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,oBACbxB,EAAAC,EAAAC,cAAA,UAAQsB,UAAU,eAAerB,MAAO,CAACiD,OAAQ,WAAYC,QAAS,kBAAMnB,EAAK1B,MAAM8C,oBAAvF,SACAtD,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,8BASbxB,EAAAC,EAAAC,cAAA,SAAOqD,IAAI,aAAaC,KAAK,OAAOpB,SAAUJ,KAAKxB,MAAMnB,OAAOiD,KAAKN,MAAOyB,YAAY,gCAI5FzD,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,wBACbxB,EAAAC,EAAAC,cAAA,MAAIsB,UAAU,wBA3BCmB,aCwIVe,6MA9HbC,MAAQ,CAONnE,MAAO,GACPoE,iBAAkB,GAClBC,WAAY,GACZC,KAAM,GACNC,cAAe,GACfC,gBAAgB,KAYlBC,gBAAkB,WAChB,IAAIC,EAAK,GACLC,EAAK,GACLC,EAAI,GAEMxF,OAAAmD,EAAA,EAAAnD,CAAOsD,EAAKyB,MAAMnE,OAErB2B,QAAQ,SAAC7C,GAClB,OAAQA,EAAKC,OACX,IAAK,mBACL2F,EAAGG,KAAK/F,GACR,MACA,IAAK,aACL6F,EAAGE,KAAK/F,GACR,MACA,IAAK,OACL8F,EAAEC,KAAK/F,GACP,MACA,QACA,OAAO,KAIX4D,EAAKoC,SAAS,CAACV,iBAAkBM,EAAIL,WAAYM,EAAKL,KAAMM,OAG9D/B,KAAO,SAAC/D,EAAMiG,GACZC,EAAgBlG,EAAMiG,EAAEE,OAAOlC,OAC5BrD,KAAM,SAACwF,GACNxC,EAAKyC,yBAIXtF,OAAS,SAACkF,GACR,GAAsB,KAAnBA,EAAEE,OAAOlC,MACViC,EAAgBD,EAAEE,OAAOlC,OACtBrD,KAAM,SAACwF,GACNxC,EAAKoC,SAAS,CAAEP,cAAeW,UAE9B,CAELxC,EAAKoC,SAAS,CAACP,cADD,SAMlBT,gBAAkB,WAChBpB,EAAKoC,SAAS,CAAEN,gBAAgB,wFAvDd,IAAAY,EAAA5C,KTTpBxD,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,QSShBN,KAAM,SAACwF,GACNE,EAAKN,SAAS,CAAE9E,MAAOkF,IACvBE,EAAKX,qDAsDF,IAAAY,EAAA7C,KACP,OACEhC,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACE9E,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,OACZQ,KAAK2B,MAAMK,eACVhE,EAAAC,EAAAC,cAACF,EAAAC,EAAMoB,SAAP,KACErB,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAC8E,EAAD,CAAY3F,OAAQ2C,KAAK3C,OAAQiE,gBAAiBtB,KAAKsB,kBACtDtB,KAAK2B,MAAMI,cAAckB,OAAS,EACjCjF,EAAAC,EAAAC,cAACgF,EAAD,CACE1F,MAAOwC,KAAK2B,MAAMI,cAClB7C,YAAac,KAAK2B,MAAMnE,MACxBkD,MAAO,iBACPL,KAAML,KAAKK,OAGXrC,EAAAC,EAAAC,cAAA,8BAKNF,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,cACbxB,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAACgF,EAAD,CACE1F,MAAOwC,KAAK2B,MAAMC,iBAClB1C,YAAac,KAAK2B,MAAMnE,MACxBkD,MAAO,oBACPL,KAAML,KAAKK,OAEbrC,EAAAC,EAAAC,cAACgF,EAAD,CACE1F,MAAOwC,KAAK2B,MAAME,WAClB3C,YAAac,KAAK2B,MAAMnE,MACxBkD,MAAO,eACPL,KAAML,KAAKK,OAEbrC,EAAAC,EAAAC,cAACgF,EAAD,CACE1F,MAAOwC,KAAK2B,MAAMG,KAClB5C,YAAac,KAAK2B,MAAMnE,MACxBkD,MAAO,OACPL,KAAML,KAAKK,OAEbrC,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,eACbxB,EAAAC,EAAAC,cAAA,UAAQmD,QAAS,kBAAMwB,EAAKP,SAAS,CAAEN,gBAAgB,MAAvD,yBAtHOmB,IAAMxC,iBCN7ByC,IAASC,OAAOrF,EAAAC,EAAAC,cAACoF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d862775e.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <h1 style={headerStyle}>\r\n      MyReads\r\n    </h1>\r\n  )\r\n}\r\n\r\nconst headerStyle = {\r\n  textAlign: \"center\",\r\n  background: \" #17a2b8\",\r\n  color: \"white\",\r\n  padding: \"10px\",\r\n  margin: \"0\"\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nfunction Authors(props) {\r\n\r\n  if(props.authors !== undefined) {\r\n    return props.authors.map((author) => (\r\n      <div key={uuidv4()} style={style}>\r\n         {author}\r\n      </div>\r\n    ))\r\n  } else {\r\n    return (\r\n      <div key={uuidv4()}></div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst style = {\r\n  margin: \"0\",\r\n  fontSize: \"12px\"\r\n}\r\n\r\nexport default Authors;\r\n","import React from \"react\";\r\n\r\nfunction idCheck (props) {\r\n\r\n  let shelf = \"Not In Library\";\r\n\r\n  let style = {\r\n    textAlign: \"center\", width: 128, marginTop: -20, color: \"white\",\r\n    backgroundColor: \"#ffc107\"\r\n  }\r\n\r\n  props.storedBooks.forEach((storedBook) => {\r\n\r\n    if(storedBook.id === props.book.id) {\r\n      shelf = storedBook.shelf;\r\n\r\n      style = {\r\n        textAlign: \"center\", width: 128, marginTop: -20,color: \"white\",\r\n        backgroundColor: \"#007bff\"\r\n      }\r\n\r\n    }\r\n\r\n  })\r\n\r\nif(props.book.shelf !== undefined) {\r\n  switch(props.book.shelf) {\r\n      case \"currentlyReading\":\r\n        shelf=\"currentlyReading\"\r\n        style = {textAlign: \"center\", width: 128, marginTop: -20, color: \"white\", backgroundColor: \"#007bff\"}\r\n        break;\r\n      case \"wantToRead\":\r\n        shelf=\"wantToRead\";\r\n        style = {textAlign: \"center\", width: 128, marginTop: -20, color: \"white\", backgroundColor: \"#dc3545\"}\r\n        break;\r\n      case \"read\":\r\n        shelf=\"read\";\r\n        style = {textAlign: \"center\", width: 128, marginTop: -20, color: \"white\", backgroundColor: \"#6c757d\"}\r\n        break;\r\n      default:\r\n      shelf = \"Not In Library\";\r\n      style = {textAlign: \"center\", width: 128, marginTop: -20, color: \"white\",backgroundColor: \"#ffc107\"}\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <p style={style}>{shelf}</p>\r\n      </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default idCheck;\r\n","import React from \"react\";\r\nimport IdCheck from \"./idcheck\";\r\n\r\nfunction Cover (props) {\r\n\r\n  // console.log(props.book.id);\r\n  // console.log(props.storedBooks);\r\n\r\n  if(props.book.imageLinks !== undefined) {\r\n    return (\r\n       <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage:  \"url(\" + props.book.imageLinks.thumbnail + \")\"}}>\r\n       <IdCheck book={props.book} storedBooks={props.storedBooks} />\r\n       </div>\r\n    )\r\n\r\n  } else {\r\n    return (\r\n      <div className=\"book-cover\" style={{ width: 128, height: 193, background:  \"white\"}}>\r\n      <IdCheck book={props.book} storedBooks={props.storedBooks} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Cover;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Authors from \"./authors\";\r\nimport Cover from \"./cover\";\r\n\r\nclass Book extends Component {\r\n\r\n  // used in case of the search menu\r\n  checkBookShelf(book) {\r\n    let selectValue = \"none\";\r\n    const storedBook = [...this.props.storedBooks];\r\n\r\n    storedBook.forEach((stored) => {\r\n        if(stored.id === book.id) {\r\n          selectValue = stored.shelf;\r\n          return selectValue;\r\n        }\r\n    })\r\n\r\n    return selectValue;\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n      return this.props.books.map((book) => (\r\n        <li key={book.id}>\r\n          <div className=\"book\">\r\n            <div className=\"book-top\">\r\n              <Cover book={book} storedBooks={this.props.storedBooks} />\r\n              <div className=\"book-shelf-changer\">\r\n                <select onChange={this.props.move.bind(this, book)} value={book.shelf ? book.shelf : this.checkBookShelf(book)}>\r\n                  <option value=\"move\" disabled>Move to...</option>\r\n                  <option value=\"currentlyReading\">Currently Reading</option>\r\n                  <option value=\"wantToRead\">Want to Read</option>\r\n                  <option value=\"read\">Read</option>\r\n                  <option value=\"none\">None</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"book-title\" style={{color: \"#007bff\"}}>{book.title}</div>\r\n            <Authors authors={book.authors}/>\r\n          </div>\r\n        </li>\r\n      ));\r\n  }\r\n}\r\n\r\nBook.propTypes = {\r\n  books: PropTypes.array.isRequired\r\n}\r\n\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\n\r\nfunction subHeader (props) {\r\n\r\n  let title = props.title;\r\n\r\n  let style = {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    backgroundColor: \"#dc3545\"\r\n  }\r\n\r\n  switch(props.title) {\r\n    case \"Currently Reading\":\r\n      style = {textAlign: \"center\",color: \"white\", backgroundColor: \"#007bff\"}\r\n      break;\r\n    case \"Want To Read\":\r\n      style = {textAlign: \"center\",color: \"white\", backgroundColor: \"#dc3545\"}\r\n      break;\r\n    case \"Read\":\r\n      style = {textAlign: \"center\",color: \"white\", backgroundColor: \"#6c757d\"}\r\n      break;\r\n    default:\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className=\"bookshelf-title\" style={style}>{title}</h2>\r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default subHeader;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Book from \"./book\";\r\nimport SubHeader from \"./subheader\";\r\n\r\nclass allocationBooks extends Component {\r\n\r\n\r\n  render() {\r\n    return  (\r\n      <div className=\"bookshelf\">\r\n        <SubHeader title={this.props.title}/>\r\n          <ol className=\"books-grid\">\r\n            <Book books={this.props.books}\r\n             move={this.props.move}\r\n             storedBooks={this.props.storedBooks}\r\n            />\r\n          </ol>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nallocationBooks.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default allocationBooks;\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nclass SearchPage extends Component {\r\n\r\n  componentDidMount() {\r\n    // to set the focus to the input field\r\n    this.refs.inputField.focus();\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <button className=\"close-search\" style={{cursor: \"pointer\"}} onClick={() => this.props.closeSearchPage()}>Close</button>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n              NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n              You can find these search terms here:\r\n              https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n              However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n              you don't find a specific author or title. Every search is limited by search terms.\r\n            */}\r\n            <input ref=\"inputField\" type=\"text\" onChange={this.props.search.bind(this)} placeholder=\"Search by title or author\"/>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\"></ol>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport * as BooksAPI from './BooksAPI';\r\nimport './App.css';\r\nimport Header from \"./components/header\";\r\n// The ReadState will be the states: Currently Reading, Want To Read and Read.\r\nimport AllocationBooks from \"./components/allocationbooks\";\r\n// Search Page: complete new page to search books\r\nimport SearchPage from \"./components/searchpage\";\r\n\r\n\r\nclass BooksApp extends React.Component {\r\n\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: [],\r\n    currentlyReading: [],\r\n    wantToRead: [],\r\n    read: [],\r\n    searchedBooks: [],\r\n    showSearchPage: false\r\n  }\r\n\r\n  // As soon as the component mount let's get all the books\r\n  componentDidMount() {\r\n    BooksAPI.getAll()\r\n      .then( (response) =>  {\r\n        this.setState({ books: response })\r\n        this.reorganizeBooks()\r\n      })\r\n  }\r\n\r\n  reorganizeBooks = () => {\r\n    let cr = [];\r\n    let wr = [];\r\n    let r = [];\r\n\r\n    let localbooks = [...this.state.books];\r\n\r\n    localbooks.forEach((book) => {\r\n      switch (book.shelf) {\r\n        case \"currentlyReading\":\r\n        cr.push(book);\r\n        break\r\n        case \"wantToRead\":\r\n        wr.push(book);\r\n        break\r\n        case \"read\":\r\n        r.push(book);\r\n        break\r\n        default:\r\n        return false;\r\n      }\r\n    })\r\n\r\n    this.setState({currentlyReading: cr, wantToRead: wr,  read: r});\r\n  }\r\n\r\n  move = (book, e) => {\r\n    BooksAPI.update(book, e.target.value)\r\n      .then( (response) => {\r\n        this.componentDidMount();\r\n      })\r\n  }\r\n\r\n  search = (e) => {\r\n    if(e.target.value !== \"\") {\r\n      BooksAPI.search(e.target.value)\r\n        .then( (response) =>  {\r\n          this.setState({ searchedBooks: response })\r\n        })\r\n    } else {\r\n      const array = [];\r\n      this.setState({searchedBooks: array})\r\n    }\r\n\r\n  }\r\n\r\n  closeSearchPage = () => {\r\n    this.setState({ showSearchPage: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          {this.state.showSearchPage ? (\r\n            <React.Fragment>\r\n              <Header />\r\n              <SearchPage search={this.search} closeSearchPage={this.closeSearchPage}  />\r\n              {this.state.searchedBooks.length > 0 ? (\r\n                <AllocationBooks\r\n                  books={this.state.searchedBooks}\r\n                  storedBooks={this.state.books}\r\n                  title={\"Searched Books\"}\r\n                  move={this.move}\r\n                />\r\n              ):(\r\n                  <h2>No Book Founded</h2>\r\n              )}\r\n\r\n            </React.Fragment>\r\n          ) : (\r\n            <div className=\"list-books\">\r\n              <Header />\r\n              <AllocationBooks\r\n                books={this.state.currentlyReading}\r\n                storedBooks={this.state.books}\r\n                title={\"Currently Reading\"}\r\n                move={this.move}\r\n              />\r\n              <AllocationBooks\r\n                books={this.state.wantToRead}\r\n                storedBooks={this.state.books}\r\n                title={\"Want To Read\"}\r\n                move={this.move}\r\n              />\r\n              <AllocationBooks\r\n                books={this.state.read}\r\n                storedBooks={this.state.books}\r\n                title={\"Read\"}\r\n                move={this.move}\r\n              />\r\n              <div className=\"open-search\">\r\n                <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}